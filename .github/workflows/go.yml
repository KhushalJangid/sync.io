name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    
permissions:
  contents: write


jobs:
  build:
    name: Build Go binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux,windows,darwin]
        goarch: [amd64,arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.5

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod tidy

      - name: Build binary
        run: |
          mkdir -p build
          GOOS=${{matrix.goos}} GOARCH=${{matrix.goarch}} go build -o build/Sync.io-${{matrix.goos}}-${{matrix.goarch}}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Sync.io-${{matrix.goos}}-${{matrix.goarch}}
          path: build/Sync.io-${{matrix.goos}}-${{matrix.goarch}}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Linux AMD64 artifact
        uses: actions/download-artifact@v4
        with:
          name: Sync.io-linux-amd64
          path: build

      - name: Download Linux ARM64 artifact
        uses: actions/download-artifact@v4
        with:
          name: Sync.io-linux-arm64
          path: build

      - name: Download Windows AMD64 artifact
        uses: actions/download-artifact@v4
        with:
          name: Sync.io-windows-amd64
          path: build

      - name: Download Windows ARM64 artifact
        uses: actions/download-artifact@v4
        with:
          name: Sync.io-windows-arm64
          path: build

      - name: Download Darwin AMD64 artifact
        uses: actions/download-artifact@v4
        with:
          name: Sync.io-darwin-amd64
          path: build

      - name: Download Darwin ARM64 artifact
        uses: actions/download-artifact@v4
        with:
          name: Sync.io-darwin-arm64
          path: build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        run: |
          for file in build/*; do
            echo "Uploading $file"
            gh release upload ${{ steps.create_release.outputs.upload_url }} "$file" --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}